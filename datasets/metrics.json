{
  "type": "Snowflake",
  "managed": true,
  "featureGroup": false,
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1631654697222,
    "extendedProperties": {}
  },
  "tags": [
    "results",
    "mlops"
  ],
  "params": {
    "connection": "managed-snowflake",
    "notReadyIfEmpty": false,
    "mode": "table",
    "partitioningType": "custom",
    "normalizeDoubles": true,
    "table": "${projectKey}_METRICS",
    "schema": "PUBLIC",
    "tableCreationMode": "auto",
    "writeInsertBatchSize": 10000,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "readColsWithUnknownTzAsDates": false,
    "readSQLDateColsAsDSSDates": true,
    "sparkJdbcAccess": "NONE",
    "numPartitions": -1
  },
  "schema": {
    "columns": [
      {"name":"date","type":"date"},
      {"name":"precision","type":"double"},
      {"name":"recall","type":"double"},
      {"name":"auc","type":"double"},
      {"name":"f1","type":"double"},
      {"name":"accuracy","type":"double"},
      {"name":"mcc","type":"double"},
      {"name":"hammingLoss","type":"double"},
      {"name":"logLoss","type":"double"},
      {"name":"lift","type":"double"},
      {"name":"calibrationLoss","type":"double"},
      {"name":"customScore","type":"double"},
      {"name":"costMatrixGain","type":"double"},
      {"name":"passingAssertionsRatio","type":"double"},
      {"name":"assertionsMetrics","type":"string","maxLength":4194304}
    ],
    "userModified": true
  },
  "dkuProperties": [],
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": false,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns statistics",
          "level": 2
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "adv_col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Most frequent values",
          "level": 3
        },
        "configuration": {
          "aggregates": [],
          "numberTopValues": 10
        }
      },
      {
        "type": "percentile_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns percentiles",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "verify_col",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Data validity",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "python",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Python probe",
          "level": 8
        },
        "configuration": {
          "code": "# Define here a function that returns the metric.\ndef process(dataset, partition_id):\n    # dataset is a dataiku.Dataset object\n    dataset_df \u003d dataset.get_dataframe()\n    accuracy \u003d dataset_df.iloc[len(dataset_df) - 1][\"accuracy\"]\n    precision \u003d dataset_df.iloc[len(dataset_df) - 1][\"precision\"]\n    recall \u003d dataset_df.iloc[len(dataset_df) - 1][\"recall\"]\n    \n    return {\u0027accuracy\u0027 : round(accuracy, 3), \u0027precision\u0027 : round(precision, 3), \u0027recall\u0027 : round(recall, 3)}",
          "envSelection": {
            "envMode": "INHERIT"
          }
        }
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "ascending": true,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "partition": "NP",
      "columns": [],
      "metrics": [
        "check:CHECK:Accuracy",
        "check:CHECK:Precision",
        "check:CHECK:Recall"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [
      {
        "metricId": "python:accuracy:Python probe",
        "minimum": 0.8,
        "maximum": 0.0,
        "softMinimum": 0.9,
        "softMaximum": 0.0,
        "minimumEnabled": true,
        "maximumEnabled": false,
        "softMinimumEnabled": true,
        "softMaximumEnabled": false,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Accuracy"
        },
        "computeOnBuildMode": "PARTITION"
      },
      {
        "metricId": "python:precision:Python probe",
        "minimum": 0.8,
        "maximum": 0.0,
        "softMinimum": 0.9,
        "softMaximum": 0.0,
        "minimumEnabled": true,
        "maximumEnabled": false,
        "softMinimumEnabled": true,
        "softMaximumEnabled": false,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Precision"
        },
        "computeOnBuildMode": "PARTITION"
      },
      {
        "metricId": "python:recall:Python probe",
        "minimum": 0.7,
        "maximum": 0.0,
        "softMinimum": 0.8,
        "softMaximum": 0.0,
        "minimumEnabled": true,
        "maximumEnabled": false,
        "softMinimumEnabled": true,
        "softMaximumEnabled": false,
        "type": "numericRange",
        "meta": {
          "name": "Value in range",
          "label": "Recall"
        },
        "computeOnBuildMode": "PARTITION"
      }
    ],
    "displayedState": {
      "partition": "NP",
      "checks": [
        "Recall",
        "Precision",
        "Accuracy"
      ]
    }
  },
  "customFields": {}
}