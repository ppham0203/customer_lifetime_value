{
  "type": "Snowflake",
  "managed": true,
  "featureGroup": false,
  "checklists": {
    "checklists": []
  },
  "checks": [],
  "customMeta": {
    "kv": {}
  },
  "flowOptions": {
    "virtualizable": false,
    "rebuildBehavior": "NORMAL",
    "crossProjectBuildBehavior": "DEFAULT"
  },
  "readWriteOptions": {
    "preserveOrder": false,
    "writeBuckets": 1,
    "forceSingleOutputFile": false,
    "defaultReadOrdering": {
      "enabled": false,
      "rules": []
    }
  },
  "partitioning": {
    "ignoreNonMatchingFile": false,
    "considerMissingRequestedPartitionsAsEmpty": false,
    "dimensions": []
  },
  "creationTag": {
    "versionNumber": 0,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1631196936508,
    "extendedProperties": {}
  },
  "tags": [
    "feature generation",
    "metric_check"
  ],
  "params": {
    "connection": "managed-snowflake",
    "notReadyIfEmpty": false,
    "mode": "table",
    "partitioningType": "custom",
    "normalizeDoubles": true,
    "table": "${NODE}_${projectKey}_LAST_YEAR_JOIN",
    "schema": "PUBLIC",
    "tableCreationMode": "auto",
    "writeInsertBatchSize": 10000,
    "writeJDBCBadDataBehavior": "DISCARD_ROW",
    "readColsWithUnknownTzAsDates": false,
    "readSQLDateColsAsDSSDates": true,
    "sparkJdbcAccess": "NONE",
    "numPartitions": -1
  },
  "schema": {
    "columns": [
      {"name":"customer_id","type":"string","maxLength":4194304},
      {"name":"pages_visited","type":"string","maxLength":4194304},
      {"name":"campaign","type":"string","maxLength":4194304},
      {"name":"ip","type":"string","maxLength":4194304},
      {"name":"Country","type":"string","maxLength":4194304},
      {"name":"GDP_per_cap","type":"bigint"},
      {"name":"birth","type":"string","maxLength":4194304},
      {"name":"price_first_item_purchased","type":"string","maxLength":4194304},
      {"name":"gender","type":"string","maxLength":4194304},
      {"name":"revenue","type":"string","maxLength":4194304}
    ],
    "userModified": true
  },
  "dkuProperties": [],
  "metrics": {
    "probes": [
      {
        "type": "basic",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Basic data",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "records",
        "enabled": true,
        "computeOnBuildMode": "PARTITION",
        "meta": {
          "name": "Record count",
          "level": 0
        },
        "configuration": {}
      },
      {
        "type": "col_stats",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns statistics",
          "level": 2
        },
        "configuration": {
          "aggregates": [
            {
              "column": "birth",
              "aggregated": "MIN"
            }
          ]
        }
      },
      {
        "type": "adv_col_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Most frequent values",
          "level": 3
        },
        "configuration": {
          "aggregates": [],
          "numberTopValues": 10
        }
      },
      {
        "type": "percentile_stats",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Columns percentiles",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "verify_col",
        "enabled": false,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Data validity",
          "level": 4
        },
        "configuration": {
          "aggregates": []
        }
      },
      {
        "type": "python",
        "enabled": true,
        "computeOnBuildMode": "NO",
        "meta": {
          "name": "Python probe #6",
          "level": 8
        },
        "configuration": {
          "code": "def process(last_values, dataset):\n    import dataiku\n    ds \u003d dataiku.Dataset(\u0027last_year_join\u0027)\n    history \u003d ds.get_metric_history(\u0027records:COUNT_RECORDS\u0027)\n    last_value \u003d history.get(\u0027lastValue\u0027).get(\u0027value\u0027)\n    previous_value \u003d history.get(\u0027values\u0027)[-2].get(\u0027value\u0027)\n    \n    percent_change \u003d (last_value - previous_value)/previous_value\n    \n    # dataset is a dataiku.Dataset object\n    return {\u0027record_count_percent_change\u0027 : percent_change}\n",
          "envSelection": {
            "envMode": "INHERIT"
          }
        }
      }
    ],
    "engineConfig": {
      "padRunsWithMetrics": false,
      "hive": {
        "active": true,
        "extraConf": []
      },
      "basic": {},
      "dss": {
        "active": true,
        "selection": {
          "useMemTable": false,
          "filter": {
            "distinct": false,
            "enabled": false
          },
          "partitionSelectionMethod": "ALL",
          "latestPartitionsN": 1,
          "ordering": {
            "enabled": false,
            "rules": []
          },
          "samplingMethod": "FULL",
          "maxRecords": -1,
          "targetRatio": 0.02,
          "ascending": true,
          "withinFirstN": -1,
          "maxReadUncompressedBytes": -1
        }
      },
      "sql": {
        "active": true
      },
      "impala": {
        "active": true
      },
      "spark": {
        "active": true,
        "extraConf": []
      },
      "python": {}
    },
    "displayedState": {
      "partition": "NP",
      "columns": [],
      "metrics": [
        "basic:COUNT_COLUMNS",
        "records:COUNT_RECORDS",
        "reporting:BUILD_DURATION",
        "python:record_count_percent_change:Python probe #6"
      ]
    }
  },
  "metricsChecks": {
    "runOnBuild": false,
    "checks": [
      {
        "metricId": "basic:COUNT_COLUMNS",
        "values": [
          "10"
        ],
        "type": "valueSet",
        "meta": {
          "name": "Value in set",
          "label": "Columns\u003d10"
        },
        "computeOnBuildMode": "PARTITION"
      },
      {
        "code": "# Define here a function that returns the outcome of the check.\ndef process(last_values, dataset, partition_id):\n    import dataiku\n    ds \u003d dataiku.Dataset(\u0027last_year_join\u0027)\n    history \u003d ds.get_metric_history(\u0027records:COUNT_RECORDS\u0027)\n    last_value \u003d history.get(\u0027lastValue\u0027).get(\u0027value\u0027)\n    previous_value \u003d history.get(\u0027values\u0027)[-2].get(\u0027value\u0027)\n    \n    percent_change \u003d (last_value - previous_value)/previous_value\n    \n    if percent_change\u003e.5:\n          return \u0027WARNING\u0027, \u0027optional message\u0027 # or \u0027WARNING\u0027 or \u0027ERROR\u0027\n    else:\n           return \u0027OK\u0027\n",
        "envSelection": {
          "envMode": "INHERIT"
        },
        "type": "python",
        "meta": {
          "name": "Custom check",
          "label": "Record count change under 50%"
        },
        "computeOnBuildMode": "PARTITION"
      }
    ],
    "displayedState": {
      "partition": "NP",
      "checks": [
        "Columns\u003d10",
        "Record count change under 50%"
      ]
    }
  },
  "customFields": {}
}